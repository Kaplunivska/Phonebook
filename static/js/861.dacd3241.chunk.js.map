{"version":3,"file":"static/js/861.dacd3241.chunk.js","mappings":"wOAEaA,EAAUC,EAAAA,EAAAA,IAAH,2JAQPC,EAAQD,EAAAA,EAAAA,GAAH,4CAGLE,EAAYF,EAAAA,EAAAA,QAAH,4CAGTG,EAAOH,EAAAA,EAAAA,EAAH,iEAIJI,EAAmBJ,EAAAA,EAAAA,IAAH,wE,4DClBhBK,EAAML,EAAAA,EAAAA,IAAH,gGAEM,qBAAGM,MAAkBC,OAAOC,KAA5B,IAGTC,EAAOT,EAAAA,EAAAA,KAAH,+FACK,qBAAGM,MAAkBC,OAAOC,KAA5B,IAITE,EAAQV,EAAAA,EAAAA,MAAH,oPAKI,qBAAGM,MAAkBC,OAAOI,IAA5B,IAKF,qBAAGL,MAAkBC,OAAOK,MAA5B,IAIPC,EAAab,EAAAA,EAAAA,EAAH,qFAEZ,qBAAGM,MAAkBC,OAAOO,GAA5B,IAGEC,EAASf,EAAAA,EAAAA,OAAH,waAMG,qBAAGM,MAAkBC,OAAOK,MAA5B,IACX,qBAAGN,MAAkBC,OAAOC,KAA5B,IAQa,qBAAGF,MAAkBC,OAAOI,IAA5B,IAGXK,EAAShB,EAAAA,EAAAA,IAAH,mKACG,qBAAGM,MAAkBC,OAAOU,KAA5B,IAMTd,EAAOH,EAAAA,EAAAA,EAAH,8DACN,qBAAGM,MAAkBC,OAAOI,IAA5B,I,SC1CI,SAASO,IAAgB,IAAD,MAC/BC,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,IAClC,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,MACNC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,MATZC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACaC,EAJf,EAIEC,UAAaD,OAUTE,GAAWC,EAAAA,EAAAA,MAYjB,OACE,UAAC7B,EAAD,YACE,SAAC,EAAD,uBACA,UAACI,EAAD,CAAM0B,SAAUN,GAbI,SAAAO,GACtBH,GAASI,EAAAA,EAAAA,IAAgBD,IACtBE,SACAC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OACJC,EAAAA,GAAAA,QAAA,UAAiBD,EAAKf,KAAtB,4CADI,IAGLiB,OAAM,kBAAMD,EAAAA,GAAAA,MAAY,yCAAlB,IACTX,GACD,IAKG,WACE,SAACpB,GAAD,gBACEiC,KAAK,QACDf,EAAS,OAAQ,CACnBgB,SAAU,wBACVC,QAAS,CACPC,MAAO,g+eACPC,QAAS,gCANf,IASEC,YAAY,gBAEd,SAACnC,EAAD,oBAAakB,EAAON,YAApB,aAAa,EAAasB,WAE1B,SAACrC,GAAD,gBACEiC,KAAK,QACDf,EAAS,QAAS,CACpBgB,SAAU,oBACVC,QAAS,CACPC,MAAO,4CACPC,QAAS,4BANf,IASEC,YAAY,YAEd,SAACnC,EAAD,oBAAakB,EAAOL,aAApB,aAAa,EAAcqB,WAE3B,SAACrC,GAAD,gBACEiC,KAAK,YACDf,EAAS,WAAY,CACvBgB,SAAU,uBACVC,QAAS,CACPC,MACE,6DACFC,QACE,qIARR,IAWEC,YAAY,eAEd,SAACnC,EAAD,oBAAakB,EAAOJ,gBAApB,aAAa,EAAiBoB,WAE9B,SAAChC,EAAD,CAAQkC,SAAU9B,GAAgD,IAA/B+B,OAAOC,KAAKpB,GAAQqB,OAAvD,qCAIF,SAACpC,EAAD,WACE,SAAC,EAAD,wFAMP,CC1FgB,SAASqC,IACtB,OACE,SAACnD,EAAD,WACE,UAACE,EAAD,YACE,UAACL,EAAD,YACE,SAACE,EAAD,4CACA,SAACE,EAAD,2HAKF,SAACe,EAAD,QAIP,C","sources":["pages/Home/Home.styled.js","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  width: 760px;\n  text-align: start;\n  padding-left: 40px;\n  margin-right: 200px;\n  margin-top: auto;\n  margin-bottom: auto;\n`;\nexport const Title = styled.h1`\n  font-size: 60px;\n`;\nexport const Container = styled.section`\n  padding: 40px 0;\n`;\nexport const Text = styled.p`\n  margin-top: 12px;\n  font-size: 24px;\n`;\nexport const ContentContainer = styled.div`\n  display: flex;\n  padding: 40px 40px 40px 0;\n`;","import styled from '@emotion/styled';\n\nexport const Div = styled.div`\n  border-radius: 12px;\n  background-color: ${({ theme }) => theme.colors.white};\n  padding-top: 40px;\n`;\nexport const Form = styled.form`\n  background-color: ${({ theme }) => theme.colors.white};\n  padding: 20px 40px 40px;\n  width: 500px;\n`;\nexport const Input = styled.input`\n  display: inline-block;\n  border-radius: 8px;\n  width: 420px;\n  height: 50px;\n  border: 1px solid ${({ theme }) => theme.colors.grey};\n  padding: 4px 12px;\n  font-size: 16px;\n  &:focus {\n    outline: transparent;\n    border-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n\nexport const Validation = styled.p`\n  margin-bottom: 24px;\n  color: ${({ theme }) => theme.colors.red};\n  text-align: start;\n`;\nexport const Button = styled.button`\n  width: 420px;\n  height: 50px;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.colors.accent};\n  color: ${({ theme }) => theme.colors.white};\n  font-size: 16px;\n  box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\n  &:hover,\n  &:focus {\n    box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  }\n  &:disabled {\n    background-color: ${({ theme }) => theme.colors.grey};\n  }\n`;\nexport const Policy = styled.div`\n  background-color: ${({ theme }) => theme.colors.light};\n  width: 500px;\n  padding: 20px 40px;\n  border-bottom-right-radius: 12px;\n  border-bottom-left-radius: 12px;\n`;\nexport const Text = styled.p`\n  color: ${({ theme }) => theme.colors.grey};\n  text-align: center;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'react-toastify';\nimport { registerNewUser } from 'redux/authentification/operations';\nimport { selectIsLoading } from 'redux/authentification/selectors';\nimport {\n  Form,\n  Input,\n  Button,\n  Policy,\n  Div,\n  Text,\n  Validation,\n} from './RegisterForm.styled';\n\nexport default function RegisterForm() {\n  const signInLoading = useSelector(selectIsLoading);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    mode: 'all',\n    defaultValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n  });\n\n  const dispatch = useDispatch();\n\n  const onSubmitHandler = data => {\n    dispatch(registerNewUser(data))\n      .unwrap()\n      .then(({ user }) =>\n        toast.success(`${user.name}, your account was successfully created!`)\n      )\n      .catch(() => toast.error('Something went wrong. Please try again'));\n    reset();\n  };\n\n  return (\n    <Div>\n      <Text>Sign in</Text>\n      <Form onSubmit={handleSubmit(onSubmitHandler)}>\n        <Input\n          type=\"text\"\n          {...register('name', {\n            required: 'Full name is required',\n            pattern: {\n              value: /^([\\p{L}]{3,12})+\\s+([\\p{L}\\s]{3,12})+$/iu,\n              message: 'Invalid type of full name',\n            },\n          })}\n          placeholder=\"Full name\"\n        />\n        <Validation>{errors.name?.message}</Validation>\n\n        <Input\n          type=\"text\"\n          {...register('email', {\n            required: 'Email is required',\n            pattern: {\n              value: /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/,\n              message: 'Invalid type of email',\n            },\n          })}\n          placeholder=\"Email\"\n        />\n        <Validation>{errors.email?.message}</Validation>\n\n        <Input\n          type=\"password\"\n          {...register('password', {\n            required: 'Password is required',\n            pattern: {\n              value:\n                /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#%&])(?=.{8,16})/,\n              message:\n                'Invalid type of password ( password must be at least of 8 characters including number, upper, lower and one special character)',\n            },\n          })}\n          placeholder=\"Password\"\n        />\n        <Validation>{errors.password?.message}</Validation>\n\n        <Button disabled={signInLoading || Object.keys(errors).length !== 0}>\n          Create your account\n        </Button>\n      </Form>\n      <Policy>\n        <Text>\n          By signing up, you agree to our terms, data policy and cookies policy\n        </Text>\n      </Policy>\n    </Div>\n  );\n}\n","import {\n    Container,\n    Wrapper,\n    Title,\n    Text,\n    ContentContainer,\n  } from './Home.styled';\n  \n  import RegisterForm from 'components/RegisterForm/RegisterForm';\n  export default function Home() {\n    return (\n      <Container>\n        <ContentContainer>\n          <Wrapper>\n            <Title>SAFELY * RELIABLY * SIMPLY *</Title>\n            <Text>\n            Do you want to add and remove contacts in the phonebook easily? Try it now in your\n            phonebook application\n            </Text>\n          </Wrapper>\n          <RegisterForm />\n        </ContentContainer>\n      </Container>\n    );\n  }"],"names":["Wrapper","styled","Title","Container","Text","ContentContainer","Div","theme","colors","white","Form","Input","grey","accent","Validation","red","Button","Policy","light","RegisterForm","signInLoading","useSelector","selectIsLoading","useForm","mode","defaultValues","name","email","password","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","onSubmit","data","registerNewUser","unwrap","then","user","toast","catch","type","required","pattern","value","message","placeholder","disabled","Object","keys","length","Home"],"sourceRoot":""}